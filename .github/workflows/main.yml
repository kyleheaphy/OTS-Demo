name: Release Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      qase_api_base_url:
        description: 'Qase API URL'
        required: true
      qase_report:
        description: 'Enabled/disabled reporting to Qase'
        required: true
      qase_project_code:
        description: 'Qase project code'
        required: true
      qase_run_id:
        description: 'Qase Run ID'
        required: true
      qase_run_complete:
        description: 'Complete Qase Run'
        required: true

env:
  QASE_API_BASE_URL: ${{ inputs.qase_api_base_url }}
  QASE_REPORT: ${{ inputs.qase_report }}
  QASE_PROJECT_CODE: ${{ inputs.qase_project_code }}
  QASE_RUN_ID: ${{ inputs.qase_run_id }}
  QASE_RUN_COMPLETE: ${{ inputs.qase_run_complete }}
  QASE_API_TOKEN: ${{ secrets.QASE_API_TOKEN }}
  JIRA_DOMAIN: ${{ vars.JIRA_DOMAIN }}
  JIRA_EMAIL: ${{ vars.JIRA_EMAIL }}
  JIRA_API_TOKEN: ${{ vars.JIRA_API_TOKEN }}
  JIRA_PROJECT_KEY: ${{ vars.JIRA_PROJECT_KEY }}

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      xvfb:
        image: "selenium/standalone-chrome"
        options: --shm-size 2g

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install unittest-xml-reporting pytest junitparser
        pip install requests

    - name: Install Qase CLI 
      run: |
          go install github.com/qase-tms/qasectl@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH

    - name: Run Tests (Allow Failures)
      run: |
        mkdir -p test-results-dir
        xvfb-run python -m xmlrunner GUI_unit_test.py -o test-results-dir || true

    - name: Combine Test Results into Single XML File
      run: |
        echo "<testsuites>" > test-results.xml
        for file in test-results-dir/*.xml; do
          # Append each file's content skipping the first line (the XML declaration)
          tail -n +2 "$file" >> test-results.xml
        done
        echo "</testsuites>" >> test-results.xml

    - name: Upload Test Results to Qase (Even on Failure)
      if: always()
      run: |
        qasectl testops result upload \
          --token "$QASE_API_TOKEN" \
          --project "$QASE_PROJECT_CODE" \
          --id "$QASE_RUN_ID" \
          --format junit \
          --path test-results.xml
          
    - name: Create Defects for Failed Tests and Jira Issues
      if: always()
      run: |
        python create_defect.py
      env:
          QASE_API_BASE_URL: ${{ secrets.QASE_API_BASE_URL }}
          QASE_API_TOKEN: ${{ secrets.QASE_API_TOKEN }}
          QASE_PROJECT_CODE: ${{ secrets.QASE_PROJECT_CODE }}
          JIRA_DOMAIN: ${{ vars.JIRA_DOMAIN }}
          JIRA_EMAIL: ${{ vars.JIRA_EMAIL }}
          JIRA_API_TOKEN: ${{ vars.JIRA_API_TOKEN }}
          JIRA_PROJECT_KEY: ${{ vars.JIRA_PROJECT_KEY }}
          
    - name: Complete Qase Run (Even on Failure)
      if: always()
      run: |
        qasectl testops run complete \
          --project "$QASE_PROJECT_CODE" \
          --token "$QASE_API_TOKEN" \
          --id "$QASE_RUN_ID" \
          --verbose
